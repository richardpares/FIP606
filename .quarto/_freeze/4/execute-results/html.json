{
  "hash": "adfcfbf40d4eeadd2ce352a2e8bfe140",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Creando vectores y objetos\"\nauthor: \"Richard Pardes-Espinosa\"\ndata: \"2024-07-01\"\nformat: html\neditor: visual\neditor_options: \n  chunk_output_type: console\ntoc: true\nnumber-sections: true\ncode-fold: show\ncode-summary: \"ver código\"\n---\n\n\n\n## Vectores\n\nUn vector es una estructura de datos que puede ser un elemento o contener varios elementos del mismo tipo, como números, caracteres o valores lógicos. A continuación, presento algunos ejemplos:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Vectores simples \na <- 1\na\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n\n```{.r .cell-code}\nb <- 2\nb\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n\n```{.r .cell-code}\na + b\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n\nAquí, se presenta algunos ejemplos de vectore útilies:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# crear vectores numéricos\nnumericos <- c(\"5\", \"25\", \"100\", \"625\")\n\n# crear vectores categóricos \ncategoricos <- c(\"manzana\", \"banana\", \"naranja\", \"pera\")\n\n# crear vectores lógicos\nlogicos <- c(\"1\", \"0\", \"1\", \"0\")\n\n# crear vectores secuencia\nsecuencias <- seq(1, 10, by = 2)\n\n# crear vectores repitiendo un valor\nrepetir <- rep(7, times = 5)\n\n# Matrix\nmatriz <- matrix(1:9, nrow = 3)\n\n# Data frame\ndf <- data.frame(\n  id = 1:5,\n  nombre = c(\"Gabrel\", \"Yuri\", \"Raisa\", \"Mariana\", \"Ester\"),\n  edad = c(23, 25, 30, 22, 29)\n)\n\n# Lista\ndf1 <- list(\n  frutas = categoricos,\n  cantidades = numericos,\n  enfermedades = logicos\n)\n\ndf1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$frutas\n[1] \"manzana\" \"banana\"  \"naranja\" \"pera\"   \n\n$cantidades\n[1] \"5\"   \"25\"  \"100\" \"625\"\n\n$enfermedades\n[1] \"1\" \"0\" \"1\" \"0\"\n```\n\n\n:::\n:::\n\n\n## Objetos\n\nUn objeto puede tomar diferentes valores, entre ellos puede expresarse como vectores, matrices, data frames, listas, entre otros. Ejemplos:\n\nEn el ejemplo podemos aprecir que, un objeto puede ser expresado como un vector (ver sección 2: Vectores)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Crear un vector numérico\nvector <- c(1, 2, 3, 4, 5)\n\n# Crear un vector de caracteres\nvector_ufv <- c(\"mejoramiento de plantas\", \"fitopatologia\")\nvector_ufv\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"mejoramiento de plantas\" \"fitopatologia\"          \n```\n\n\n:::\n:::\n\n\nPodemos crear una matriz, llamando a la función matrix y solicitando que cree 9 valores númericos (1:9), definiendo un de filas y columnas con nrow y ncol.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Crear una matriz\nmt <- matrix(1:9, nrow = 3, ncol = 3)\nmt\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n```\n\n\n:::\n:::\n\n\nPara crear un data frame es posible apyándose de la función data.frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Crear un data frame\ndf <- data.frame(\n  nombre = c(\"Jorge\", \"Emerson\", \"Eduardo\"),\n  edad = c(60, 45, 45),\n  casado = c(FALSE, TRUE, FALSE))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   nombre edad casado\n1   Jorge   60  FALSE\n2 Emerson   45   TRUE\n3 Eduardo   45  FALSE\n```\n\n\n:::\n:::\n\n\nSi obervas, un data frame te presenta una tabla organizada, mientras que una matriz sólo te presenta datos y dimensiones sin precisar el nombre de las observaciones y variables.\n\nUn data frame, por si naturaleza esta lista para realizar los trabajos de analisis de datos, por lo cual es una función de mucha utilidad.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}