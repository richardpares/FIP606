{
  "hash": "c6c3b5a2badb01d1011c5e2799e25d6e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Boxplot\"\nauthor: \"Richard Pardes-Espinosa\"\ndata: \"2024-07-01\"\nformat: html\neditor: visual\neditor_options: \n  chunk_output_type: console\ntoc: true\nnumber-sections: true\ncode-fold: show\ncode-summary: \"ver código\"\n---\n\n\n# Importar datos\n\n- Reúne los datos necesarios en un archivo de datos (por ejemplo, CSV).\n- Asegúrate de que los datos estén limpios y formateados correctamente para su análisis y visualización.\n\nAbre RStudio y crea un nueva pestaña en Quarto. Utiliza funciones como read.csv() o read_excel() para importar tus datos al entorno de RStudio. Para este ejemplo, nos apoyaremos del paquete \"datapaste\" y la función \"tribble\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# llamar a la librería \nlibrary(tidyverse)\n\n# copiar la data y pegar utilizando addins seguido de paste as tribble\ndato <- tibble::tribble(\n              ~\"trat\", ~\"rep\", ~\"comp\",\n              \"Mg2\",   1L,     9,\n              \"Mg2\",   2L,  12.5,\n              \"Mg2\",   3L,    10,\n              \"Mg2\",   4L,     8,\n              \"Mg2\",   5L,  13.2,\n              \"Mg2\",   6L,    11,\n              \"Mg2\",   7L,  10.8,\n              \"Mg2\",   8L,   9.5,\n              \"Mg2\",   9L,  10.8,\n              \"Mg2\",  10L,  10.4,\n          \"control\",   1L, 13.72,\n          \"control\",   2L, 15.91,\n          \"control\",   3L,  15.7,\n          \"control\",   4L,  14.2,\n          \"control\",   5L,  15.9,\n          \"control\",   6L, 16.54,\n          \"control\",   7L,    18,\n          \"control\",   8L,  14.4,\n          \"control\",   9L, 16.41,\n          \"control\",  10L,    16\n          )\n```\n:::\n\n\n# Exploración de los datos\n\nAntes de crear la figura, explora tus datos para comprender su estructura y distribución. Utiliza funciones como head(), summary(), y str() para obtener una visión general de tus datos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(dato)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  trat    rep  comp\n  <chr> <int> <dbl>\n1 Mg2       1   9  \n2 Mg2       2  12.5\n3 Mg2       3  10  \n4 Mg2       4   8  \n5 Mg2       5  13.2\n6 Mg2       6  11  \n```\n\n\n:::\n\n```{.r .cell-code}\nnames(dato)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"trat\" \"rep\"  \"comp\"\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(dato)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [20 × 3] (S3: tbl_df/tbl/data.frame)\n $ trat: chr [1:20] \"Mg2\" \"Mg2\" \"Mg2\" \"Mg2\" ...\n $ rep : int [1:20] 1 2 3 4 5 6 7 8 9 10 ...\n $ comp: num [1:20] 9 12.5 10 8 13.2 11 10.8 9.5 10.8 10.4 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(dato)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     trat                rep            comp      \n Length:20          Min.   : 1.0   Min.   : 8.00  \n Class :character   1st Qu.: 3.0   1st Qu.:10.70  \n Mode  :character   Median : 5.5   Median :13.46  \n                    Mean   : 5.5   Mean   :13.10  \n                    3rd Qu.: 8.0   3rd Qu.:15.90  \n                    Max.   :10.0   Max.   :18.00  \n```\n\n\n:::\n:::\n\n\n# Crear la figura\n\nPara crear un boxplot se utiliza el paquete ggplot2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\ndato |> \n  ggplot(aes(trat, comp)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](10_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nLos argumentos que se utilizó fueron:\n\n* |>: Esto toma el objeto dato y lo pasa como el primer argumento a la siguiente expresión.\n\n* ggplot(): Aquí se está creando un objeto de gráfico, lo que establece el mapeo estético utilizando aes(), donde trat se mapea al eje x (variable independiente) y comprimento que mapea al eje y (variable de dependiente).\n\n* geom_boxplot(): Esta función agrega una capa de diagrama de caja al gráfico, donde se muestra la distribución de una variable numérica (continua) a través   de sus cuartiles.\n\n\n# Personalización de la figura\n\nAñade etiquetas a los ejes x e y para hacer la figura más comprensible.\nModifica el color, tamaño y estilo de las líneas, puntos o barras según sea necesario. Agrega títulos y leyendas para proporcionar contexto a la figura. \n\nEn tal sentido, utilizaremos los siguientes argumentos:\n\n* fill: Parámetro que define el color de relleno de las cajas y bordes.\n\n* colour: Parámetro que define el color de los bordes de las cajas.\n  \n* alpha: Parámetro que define la transparencia de las cajas (0 es completamente   transparente y 100 es opaco).\n\n* outlier.colour: Parámetro que define el color de los puntos que se consideran   valores atípicos (por defecto, se dibujan puntos para los valores atípicos).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndato |> \n  ggplot(aes(trat, comp)) +\n    geom_boxplot(fill = \"dodgerblue1\", \n               colour = \"black\",\n               width = 0.8, # ancho de la caja\n               coef = 10, # tamaño de los bigotes\n               alpha = 1, # transparencia\n               outlier.colour = \"tomato2\", #NA\n               size = 2) + # bordes\n    stat_boxplot(geom ='errorbar', width = 0.25) # barrar a bigotes              \n```\n\n::: {.cell-output-display}\n![](10_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nRecordar que la figura es una construcción de capas, entonces voy a reordenar las funciones para mejorar la visualización. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndato |> \n  ggplot(aes(trat, comp)) +\n  stat_boxplot(geom ='errorbar',\n               width = 0.2) + \n  geom_boxplot(fill = \"dodgerblue1\", \n               colour = \"black\",\n               width = 0.8, \n               alpha = 1, \n               outlier.colour = \"tomato2\", #NA\n               size = 2) \n```\n\n::: {.cell-output-display}\n![](10_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n## Adicioanr y personalizar los casos \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\ndato |> \n  ggplot(aes(trat, comp)) +\n  stat_boxplot(geom ='errorbar',\n               width = 0.2) +\n  geom_boxplot(fill = \"dodgerblue1\", \n               colour = \"black\", \n               alpha = 1, \n               outlier.colour = NA) +\n  geom_jitter(color = \"black\",\n              size = 3,\n              #shape = 2, \n              with = 0.05) # with, width\n```\n\n::: {.cell-output-display}\n![](10_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Cambio de colores a los box y forma de outlier\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(show.legend = FALSE,\n               outlier.shape = NA, \n               alpha = 0.3) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              shape = 21,\n              width = 0.25) # with, width\n```\n\n::: {.cell-output-display}\n![](10_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## Utilizo colourspicker\n\nPrimeramente instalo colourpicker, luego selecciono el argumento de fill y colour para configurar en la pestaña Addins.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndato |> \n  ggplot(aes(trat, comp)) +\n  geom_boxplot(fill = \"#B010682B\", \n               colour = \"#420C23\",\n               show.legend = FALSE,\n               outlier.shape = NA, \n               alpha = 0.5) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              #shape = 21,\n              width = 0.25) # with, width\n```\n\n::: {.cell-output-display}\n![](10_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n## Selecciono colores para mi figura\n\nPrimero creo mis colores\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(\"#BBFFFF\",\"#FF00FF\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"#BBFFFF\" \"#FF00FF\"\n```\n\n\n:::\n:::\n\n\nUno los códigos llamando a la función scale_fill_manual()\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(outlier.shape = NA, \n               alpha = 0.5) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              width = 0.25) + \n  scale_fill_manual(values = c(control =\"#BBFFFF\",\n                               Mg2 = \"#FF00FF\"))\n```\n\n::: {.cell-output-display}\n![](10_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nTambién se puede configurar los colores a através de la función anteriormente llamada. Por ejemplo:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(outlier.shape = NA, \n               alpha = 0.5) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              width = 0.25) + \n  scale_fill_hue() \n```\n\n::: {.cell-output-display}\n![](10_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nUsando el paquete RColorBrewe y la función scale_fill_brewer().\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(outlier.shape = NA, \n               alpha = 0.8) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              width = 0.25) + \n  scale_fill_brewer(palette = 18) # 1-18\n```\n\n::: {.cell-output-display}\n![](10_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nUsando la función scale_fill_brewer() y escala de colores: (https://jmsallan.netlify.app/blog/the-brewer-palettes/)\n(https://colorbrewer2.org/#type=sequential&scheme=Oranges&n=3)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(outlier.shape = NA, \n               alpha = 0.8) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              width = 0.25) + \n  scale_fill_brewer(palette = \"Oranges\") #fill, color\n```\n\n::: {.cell-output-display}\n![](10_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n# Personalizar la vista y ejes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(outlier.shape = NA, \n               alpha = 0.8) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              width = 0.25) + \n  scale_fill_brewer(palette = \"Oranges\") +\n  theme_classic() +\n  labs(tittle = \"Investigación\", \n       x = \"Tratamientos\",\n       y = \"Diámetro (mm)\") +\n  expand_limits(x = 0, y = 0) +\n  scale_y_continuous(limits = c(0,20),\n                     breaks = c(0,5,10,15,20)) +\n  theme(axis.title = element_text(size = 20, \n                                  color = \"red\",\n                                  face = \"italic\"),\n        axis.text.x = element_text(size = 20, \n                                   color = \"blue\", \n                                   hjust = 0.5, \n                                   vjust = 1,\n                                   face = \"bold\")) + #“plain”, “italic”, “bold” and “bold.italic”\n  theme(axis.text.y = element_text(size = 20, \n                                   color = \"green\", \n                                   hjust = 1, \n                                   vjust = 0.4,\n                                   face = \"italic\")) +\n  theme(legend.position = \"none\") \n```\n\n::: {.cell-output-display}\n![](10_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n# Modelo de Boxplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  stat_boxplot(geom = \"errorbar\", \n               width = 0.15) +\n  geom_boxplot(outlier.shape = NA,\n               color = \"black\",\n               size = 0.5) + \n  geom_jitter(color = \"black\",\n               size = 2) +\n  theme_classic() +\n  labs(x = \"Factores\",\n       y = \"Altura de planta (cm)\") +\n  scale_fill_brewer(palette = \"7\") +\n  expand_limits(y = 0) +\n  scale_y_continuous(limits = c(0,23),\n                     breaks = c(0,5,10,15,20,25,30)) +\n  theme(axis.title = element_text(size = 20, color = \"red\")) +\n  theme(axis.text.x = element_text(size = 15, color = \"blue\")) +\n  theme(axis.text.y = element_text(size = 15, color = \"green\")) +\n  theme(legend.position = c(0.2, 0.9),\n        legend.background = element_rect(color = \"black\"),\n        legend.text = element_text(size = 15), \n        legend.title = element_text(size = 15)) + \n  scale_fill_discrete(name = \"Tratamientos\")\n```\n\n::: {.cell-output-display}\n![](10_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "10_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}