{
  "hash": "757da3675124317534d2d20c570fd27f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Operaciones estadísticas\"\nauthor: \"Richard Pardes-Espinosa\"\ndata: \"2024-07-01\"\nformat: html\neditor: visual\neditor_options: \n  chunk_output_type: console\ntoc: true\nnumber-sections: true\ncode-fold: show\ncode-summary: \"ver código\"\n---\n\n\n## Operaciones básicas\n\nEste script en RStudio utiliza funciones estadísticas básicas para analizar un vector numérico `c(1, 2, 3, 4, 5)`. Primero, `mean()` calcula la media de los valores, proporcionando una medida promedio. Luego, `median()` determina la mediana, que es el valor medio cuando los datos están ordenados. `sd()` calcula la desviación estándar, una medida de dispersión que indica cuánto varían los datos respecto a la media. `sum()` suma todos los valores del vector, proporcionando la suma total. Finalmente, `length()` devuelve el número de elementos en el vector, dando una cuenta del tamaño del conjunto de datos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Media\nmean(c(1, 2, 3, 4, 5))  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n\n```{.r .cell-code}\n# Mediana\nmedian(c(1, 2, 3, 4, 5))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n\n```{.r .cell-code}\n# Desviación estándar \nsd(c(1, 2, 3, 4, 5))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.581139\n```\n\n\n:::\n\n```{.r .cell-code}\n# Suma \nsum(c(1, 2, 3, 4, 5))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 15\n```\n\n\n:::\n\n```{.r .cell-code}\n# Elementos\nlength(c(1, 2, 3, 4, 5))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n:::\n\n\n## Manipulación de datos\n\nPara la manipulación de datos, primero, se crea un data frame `df` con columnas `parcelas` y `ufc`, y se usa `subset(df, ufc > 25)` para filtrar las filas donde `ufc` es mayor a 25. Luego, `order(c(3, 1, 4, 1, 5, 9))` devuelve los índices que ordenan el vector de entrada. Para combinar data frames, se crean `df1` y `df2` con columnas `parcelas`, `incidencia`, y `severidad`, respectivamente, y se fusionan usando `merge(df1, df2, by = \"parcelas\")` para obtener `df3`, que contiene todas las columnas combinadas basadas en la columna común `parcelas`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extrae subconjuntos \ndf <- data.frame(parcelas = 1:5, \n                 ufc = c(23, 25, 30, 22, 29))\nsubset(df, \n       ufc > 25)  # Filtra filas donde edad > 25\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  parcelas ufc\n3        3  30\n5        5  29\n```\n\n\n:::\n\n```{.r .cell-code}\n# Ordena\norder(c(3, 1, 4, 1, 5, 9))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2 4 1 3 5 6\n```\n\n\n:::\n\n```{.r .cell-code}\n# Combina data frames\ndf1 <- data.frame(parcelas = 1:10, \n                  incidencia = c(\"15\", \"12\", \"36\", \"53\", \"67\", \n                                 \"48\", \"15\", \"20\", \"2\", \"15\"))\ndf2 <- data.frame(parcelas = 1:10, \n                  severidad = c(\"59\", \"64\", \"56\", \"30\", \"21\", \n                             \"55\", \"66\", \"24\", \"12\", \"28\"))\ndf3 <- merge(df1,\n             df2,\n             by = \"parcelas\")\ndf3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   parcelas incidencia severidad\n1         1         15        59\n2         2         12        64\n3         3         36        56\n4         4         53        30\n5         5         67        21\n6         6         48        55\n7         7         15        66\n8         8         20        24\n9         9          2        12\n10       10         15        28\n```\n\n\n:::\n:::\n\n\n## Funciones de gráficos\n\nSe crean dos vectores `x` y `y` con 50 valores aleatorios, eExtraídos del rango de 1 a 100 usando la función `sample`. Luego, se utiliza la función `plot` para crear el gráfico de dispersión donde los puntos representan la relación entre `x` e `y`. Los argumentos `main`, `xlab`, y `ylab` añaden el título \"Gráfico de dispersión\" y las etiquetas de los ejes \"Incidencia\" y \"Severidad\". El argumento `pch = 19` define la forma de los puntos, y `col = \"blue\"` establece su color a azul. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gráfico de dispersión\nx <- sample(1:100, 50)\ny <- sample(1:100, 50)\n\n# Crear el gráfico de dispersión\nplot(x, \n     y, \n     main = \"Gráfico de dispersión\", \n     xlab = \"Incidencia\", \n     ylab = \"Severidad\", \n     pch = 19, \n     col = \"blue\")\n```\n\n::: {.cell-output-display}\n![](5_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nLa función `hist()`, donde `x` representa los datos a graficar. El argumento `main = \"Distribución\"` añade un título al histograma, `xlab = \"Incidencia\"` y `ylab = \"Frecuencia\"` etiquetan los ejes x e y respectivamente, y `breaks = 10` especifica que el histograma debe dividir los datos en 10 intervalos o \"bins\" para mostrar la frecuencia de los valores dentro de esos rangos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# histograma \nhist(x, \n     main = \"Distribución\", \n     xlab = \"Incidencia\", \n     ylab = \"Frecuencia\",\n     breaks = 10)\n```\n\n::: {.cell-output-display}\n![](5_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nLa función `boxplot` para crear dos diagramas de cajas y bigotes, cada uno con su propio conjunto de datos: el primero con la variable `x` y el segundo con la variable `y`. Ambos gráficos están titulados \"Diagrama de cajas y bigotes\". Para el gráfico de `x`, las etiquetas de los ejes se configuran con `xlab = \"Genotipos de café\"` y `ylab = \"Incidencia\"`, mientras que para el gráfico de `y`, las etiquetas de los ejes se configuran con `xlab = \"Genotipos de café\"` y `ylab = \"Severidad\"`. Estos gráficos son útiles para visualizar la distribución, la mediana, los cuartiles y los valores atípicos de las variables mencionadas para diferentes genotipos de café.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Para la variable x\nboxplot(x,\n        main = \"Diagrama de cajas y bigotes\",\n        xlab = \"Genotipos de café\",\n        ylab = \"Incidencia\")\n```\n\n::: {.cell-output-display}\n![](5_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Para la variable y\nboxplot(y,\n        main = \"Diagrama de cajas y bigotes\",\n        xlab = \"Genotipos de café\",\n        ylab = \"Severidad\")\n```\n\n::: {.cell-output-display}\n![](5_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}