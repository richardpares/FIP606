{"title":"Gráficos de barras","markdown":{"yaml":{"title":"Gráficos de barras","author":"Richard Pardes-Espinosa","data":"2024-07-01","format":"html","editor":"visual","editor_options":{"chunk_output_type":"console"},"toc":true,"number-sections":true,"code-fold":"show","code-summary":"ver código"},"headingText":"Importar datos","containsRefs":false,"markdown":"\n\n\nUsando la función **tibble::tribble** se importa los datos de manera rápida. La base contiene a los tratamientos \n\n```{r}\n# Cargar librerías\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(tibble)\nlibrary(tidyverse)\nlibrary(ggpubr)\nlibrary(ggrepel)\nlibrary(dplyr)\n\n# importar datos\ndato <- tibble::tribble(\n              ~\"trat\", ~\"rep\", ~\"comp\",\n              \"Mg2\",   1L,     9,\n              \"Mg2\",   2L,  12.5,\n              \"Mg2\",   3L,    10,\n              \"Mg2\",   4L,     8,\n              \"Mg2\",   5L,  13.2,\n              \"Mg2\",   6L,    11,\n              \"Mg2\",   7L,  10.8,\n              \"Mg2\",   8L,   9.5,\n              \"Mg2\",   9L,  10.8,\n              \"Mg2\",  10L,  10.4,\n          \"control\",   1L, 13.72,\n          \"control\",   2L, 15.91,\n          \"control\",   3L,  15.7,\n          \"control\",   4L,  14.2,\n          \"control\",   5L,  15.9,\n          \"control\",   6L, 16.54,\n          \"control\",   7L,    18,\n          \"control\",   8L,  14.4,\n          \"control\",   9L, 16.41,\n          \"control\",  10L,    16\n          )\ndato\n```\n\n## Visualización de medias en gráfico de barras\n\nEl código crea un gráfico de barras utilizando los datos del tibble `dato`. Se usa `ggplot()` para definir los mapeos estéticos donde `trat` se asigna al eje x, `comp` al eje y, y `trat` determina el color de relleno de las barras. `geom_bar()` se utiliza con `stat = \"identity\"` para representar las alturas de las barras según los valores en `comp`, utilizando `position_dodge(0.9)` para separar las barras de diferentes tratamientos. Se aplica un tema clásico con `theme_classic()`, se añade un título al gráfico con `ggtitle()`, y se etiquetan los ejes x e y con `xlab()` y `ylab()`, respectivamente. La paleta de colores se personaliza con `scale_fill_manual()` asignando colores específicos a los tratamientos \"Mg2\" y \"control\" para facilitar la distinción visual en la leyenda.\n\n```{r}\n# Gráfico de barras\ndato |> \n  ggplot(aes(x = trat, \n             y = comp,\n             fill = trat)) +\n  geom_bar(stat = \"identity\", \n           position = position_dodge (0.9), \n           width = 0.8) + \n  theme_classic() +\n  ggtitle(\"Crecimiento de plantas\") +\n  xlab(\"Tratamientos\") +\n  ylab(\"Crecimiento (cm)\") +\n  scale_fill_manual(values = c(\"Mg2\" = \"#63B8FF\", \"control\" = \"#FFFF00\"),\n                    name = \"Tratamientos\",\n                    labels = c(\"Magnesio\", \"Control\"))\n```\n\n## Visualización de medias y SD en gráfico de barras\n\nPrimero, se calculan las medias y errores estándar de la variable `comp` agrupando los datos por `trat` mediante `group_by()` y `summarise()`. Luego, con `ggplot()`, se crea un gráfico de barras donde el eje x representa los tratamientos, el eje y las medias de `comp`, y las barras se rellenan según el tratamiento. Se utiliza `geom_bar()` para las barras y `geom_errorbar()` para las barras de error, mientras que `scale_fill_brewer()` aplica una paleta de colores. Las etiquetas y el tema del gráfico se personalizan con `labs()` y `theme_classic()`, ajustando los ejes y la leyenda con `scale_y_continuous()` y `theme()`.\n\n```{r}\n# Calcular medias y errores estándar\nmedias <- dato |> \n  group_by(trat)  |> \n  summarise(mean_comp = mean(comp),\n            sd_comp = sd(comp),\n            se_comp = sd(comp) / sqrt(n()))\n\n# Crear el gráfico de barras con medias y errores estándar\nplot1 <- medias |> \n  ggplot(aes(x = trat, \n             y = mean_comp, \n             fill = trat)) +\n  geom_bar(stat = \"identity\", \n           position = position_dodge(width = 0.8), \n           width = 0.7, \n           color = \"black\") +\n  geom_errorbar(aes(ymin = mean_comp - se_comp, \n                    ymax = mean_comp + se_comp),\n                position = position_dodge(width = 0.8), \n                width = 0.2, color = \"black\") +\n  scale_fill_brewer(palette = \"Blues\") +\n  labs(subtitle = \" \",\n       x = \"Tratamientos\",\n       y = \"Crecimiento (cm)\",\n       fill = \"Tratamientos\") +\n  theme_classic() +\n  scale_y_continuous(expand = c(0, 0), \n                     limits = c(0, 25), \n                     breaks = seq(0, 25, \n                                  by = 5)) +\n  theme(axis.text.x = element_text(size = 20, \n                                   color = \"black\", \n                                   hjust = 0.5, \n                                   vjust = 1),\n        axis.text.y = element_text(size = 20, \n                                   color = \"black\", \n                                   hjust = 1, \n                                   vjust = 0.4),\n        axis.title = element_text(size = 20, \n                                  color = \"black\"),\n        legend.position = c(0.12, 0.90),\n        legend.background = element_rect(color = NULL),\n        legend.text = element_text(size = 14),\n        legend.title = element_text(size = 14)) \nplot1\n```\n\nFinalmente, a plot1 adicionaremos `geom_text()`, el cual añade las medias redondeadas como etiquetas encima de las barras.\n\n```{r}\n# Colocar las medias\nplot1 + geom_text(data = medias,\n            aes(label = round(mean_comp, 2), \n                y = mean_comp + 2),\n            size = 7, \n            hjust = 0.5)\n```\n\n## Visualización de medias, SD y comparación de medias en gráfico de barras\n\nEn comparación con el código anterior, este script añade un nuevo tibble `legenda` que contiene coordenadas `x`, `y` y etiquetas `label` para las letras \"A\" y \"B\". Luego, en la sección de creación del gráfico, se añade `geom_text()` utilizando los datos de `legenda` para colocar las letras \"A\" y \"B\" en las coordenadas especificadas (`x = x`, `y = y`, `label = label`). Este nuevo `geom_text()` se posiciona de acuerdo con las coordenadas definidas y se establece `inherit.aes = F` para que no herede los mapeos estéticos del gráfico principal.\n\n```{r}\n# adicionar letras \nlegenda <- tibble(x = c(1,2), \n                   y = c(18,13), \n                   label = c(\"A\",\"B\"))\n\n# Crear el gráfico de barras con medias y errores estándar\nplot1 + geom_text(legenda, \n            mapping = aes (x = x, \n                           y = y, \n                           label = label), \n            size = 7, \n            inherit.aes = F)\n```\n\nEn comparación con el código anterior, esta variación introduce un vector `plot1` que almacena la mayoría de los componentes del gráfico, permitiendo reutilizarlo y simplificando la adición de nuevas capas y modificaciones. En este caso, se añaden las etiquetas con `geom_text()` utilizando los datos de legenda, y se ajusta la posición de la leyenda con `theme(legend.position = c(0.8, 0.90))`. Finalmente, se gira el gráfico para que las barras se muestren horizontalmente utilizando `coord_flip()`. Esto facilita la organización y modificación del código al centralizar los componentes básicos del gráfico en el vector plot1.\n\n```{r}\n# Crear el gráfico de barras con medias y errores estándar\nplot1 + geom_text(legenda, \n            mapping = aes (x = x, \n                           y = y, \n                           label = label), \n            size = 7, \n            inherit.aes = F) +\n  theme(legend.position = c(0.8, 0.90)) + \n          coord_flip()\n```\n\n","srcMarkdownNoYaml":"\n\n## Importar datos\n\nUsando la función **tibble::tribble** se importa los datos de manera rápida. La base contiene a los tratamientos \n\n```{r}\n# Cargar librerías\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(tibble)\nlibrary(tidyverse)\nlibrary(ggpubr)\nlibrary(ggrepel)\nlibrary(dplyr)\n\n# importar datos\ndato <- tibble::tribble(\n              ~\"trat\", ~\"rep\", ~\"comp\",\n              \"Mg2\",   1L,     9,\n              \"Mg2\",   2L,  12.5,\n              \"Mg2\",   3L,    10,\n              \"Mg2\",   4L,     8,\n              \"Mg2\",   5L,  13.2,\n              \"Mg2\",   6L,    11,\n              \"Mg2\",   7L,  10.8,\n              \"Mg2\",   8L,   9.5,\n              \"Mg2\",   9L,  10.8,\n              \"Mg2\",  10L,  10.4,\n          \"control\",   1L, 13.72,\n          \"control\",   2L, 15.91,\n          \"control\",   3L,  15.7,\n          \"control\",   4L,  14.2,\n          \"control\",   5L,  15.9,\n          \"control\",   6L, 16.54,\n          \"control\",   7L,    18,\n          \"control\",   8L,  14.4,\n          \"control\",   9L, 16.41,\n          \"control\",  10L,    16\n          )\ndato\n```\n\n## Visualización de medias en gráfico de barras\n\nEl código crea un gráfico de barras utilizando los datos del tibble `dato`. Se usa `ggplot()` para definir los mapeos estéticos donde `trat` se asigna al eje x, `comp` al eje y, y `trat` determina el color de relleno de las barras. `geom_bar()` se utiliza con `stat = \"identity\"` para representar las alturas de las barras según los valores en `comp`, utilizando `position_dodge(0.9)` para separar las barras de diferentes tratamientos. Se aplica un tema clásico con `theme_classic()`, se añade un título al gráfico con `ggtitle()`, y se etiquetan los ejes x e y con `xlab()` y `ylab()`, respectivamente. La paleta de colores se personaliza con `scale_fill_manual()` asignando colores específicos a los tratamientos \"Mg2\" y \"control\" para facilitar la distinción visual en la leyenda.\n\n```{r}\n# Gráfico de barras\ndato |> \n  ggplot(aes(x = trat, \n             y = comp,\n             fill = trat)) +\n  geom_bar(stat = \"identity\", \n           position = position_dodge (0.9), \n           width = 0.8) + \n  theme_classic() +\n  ggtitle(\"Crecimiento de plantas\") +\n  xlab(\"Tratamientos\") +\n  ylab(\"Crecimiento (cm)\") +\n  scale_fill_manual(values = c(\"Mg2\" = \"#63B8FF\", \"control\" = \"#FFFF00\"),\n                    name = \"Tratamientos\",\n                    labels = c(\"Magnesio\", \"Control\"))\n```\n\n## Visualización de medias y SD en gráfico de barras\n\nPrimero, se calculan las medias y errores estándar de la variable `comp` agrupando los datos por `trat` mediante `group_by()` y `summarise()`. Luego, con `ggplot()`, se crea un gráfico de barras donde el eje x representa los tratamientos, el eje y las medias de `comp`, y las barras se rellenan según el tratamiento. Se utiliza `geom_bar()` para las barras y `geom_errorbar()` para las barras de error, mientras que `scale_fill_brewer()` aplica una paleta de colores. Las etiquetas y el tema del gráfico se personalizan con `labs()` y `theme_classic()`, ajustando los ejes y la leyenda con `scale_y_continuous()` y `theme()`.\n\n```{r}\n# Calcular medias y errores estándar\nmedias <- dato |> \n  group_by(trat)  |> \n  summarise(mean_comp = mean(comp),\n            sd_comp = sd(comp),\n            se_comp = sd(comp) / sqrt(n()))\n\n# Crear el gráfico de barras con medias y errores estándar\nplot1 <- medias |> \n  ggplot(aes(x = trat, \n             y = mean_comp, \n             fill = trat)) +\n  geom_bar(stat = \"identity\", \n           position = position_dodge(width = 0.8), \n           width = 0.7, \n           color = \"black\") +\n  geom_errorbar(aes(ymin = mean_comp - se_comp, \n                    ymax = mean_comp + se_comp),\n                position = position_dodge(width = 0.8), \n                width = 0.2, color = \"black\") +\n  scale_fill_brewer(palette = \"Blues\") +\n  labs(subtitle = \" \",\n       x = \"Tratamientos\",\n       y = \"Crecimiento (cm)\",\n       fill = \"Tratamientos\") +\n  theme_classic() +\n  scale_y_continuous(expand = c(0, 0), \n                     limits = c(0, 25), \n                     breaks = seq(0, 25, \n                                  by = 5)) +\n  theme(axis.text.x = element_text(size = 20, \n                                   color = \"black\", \n                                   hjust = 0.5, \n                                   vjust = 1),\n        axis.text.y = element_text(size = 20, \n                                   color = \"black\", \n                                   hjust = 1, \n                                   vjust = 0.4),\n        axis.title = element_text(size = 20, \n                                  color = \"black\"),\n        legend.position = c(0.12, 0.90),\n        legend.background = element_rect(color = NULL),\n        legend.text = element_text(size = 14),\n        legend.title = element_text(size = 14)) \nplot1\n```\n\nFinalmente, a plot1 adicionaremos `geom_text()`, el cual añade las medias redondeadas como etiquetas encima de las barras.\n\n```{r}\n# Colocar las medias\nplot1 + geom_text(data = medias,\n            aes(label = round(mean_comp, 2), \n                y = mean_comp + 2),\n            size = 7, \n            hjust = 0.5)\n```\n\n## Visualización de medias, SD y comparación de medias en gráfico de barras\n\nEn comparación con el código anterior, este script añade un nuevo tibble `legenda` que contiene coordenadas `x`, `y` y etiquetas `label` para las letras \"A\" y \"B\". Luego, en la sección de creación del gráfico, se añade `geom_text()` utilizando los datos de `legenda` para colocar las letras \"A\" y \"B\" en las coordenadas especificadas (`x = x`, `y = y`, `label = label`). Este nuevo `geom_text()` se posiciona de acuerdo con las coordenadas definidas y se establece `inherit.aes = F` para que no herede los mapeos estéticos del gráfico principal.\n\n```{r}\n# adicionar letras \nlegenda <- tibble(x = c(1,2), \n                   y = c(18,13), \n                   label = c(\"A\",\"B\"))\n\n# Crear el gráfico de barras con medias y errores estándar\nplot1 + geom_text(legenda, \n            mapping = aes (x = x, \n                           y = y, \n                           label = label), \n            size = 7, \n            inherit.aes = F)\n```\n\nEn comparación con el código anterior, esta variación introduce un vector `plot1` que almacena la mayoría de los componentes del gráfico, permitiendo reutilizarlo y simplificando la adición de nuevas capas y modificaciones. En este caso, se añaden las etiquetas con `geom_text()` utilizando los datos de legenda, y se ajusta la posición de la leyenda con `theme(legend.position = c(0.8, 0.90))`. Finalmente, se gira el gráfico para que las barras se muestren horizontalmente utilizando `coord_flip()`. Esto facilita la organización y modificación del código al centralizar los componentes básicos del gráfico en el vector plot1.\n\n```{r}\n# Crear el gráfico de barras con medias y errores estándar\nplot1 + geom_text(legenda, \n            mapping = aes (x = x, \n                           y = y, \n                           label = label), \n            size = 7, \n            inherit.aes = F) +\n  theme(legend.position = c(0.8, 0.90)) + \n          coord_flip()\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"number-sections":true,"output-file":"9.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.551","editor":"visual","fontsize":"1.1em","theme":{"light":"flatly","dark":"darkly"},"title":"Gráficos de barras","author":"Richard Pardes-Espinosa","data":"2024-07-01","editor_options":{"chunk_output_type":"console"},"code-summary":"ver código"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}