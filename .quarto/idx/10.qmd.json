{"title":"Boxplot","markdown":{"yaml":{"title":"Boxplot","author":"Richard Pardes-Espinosa","data":"2024-07-01","format":"html","editor":"visual","editor_options":{"chunk_output_type":"console"},"toc":true,"number-sections":true,"code-fold":"show","code-summary":"ver código"},"headingText":"Importar datos","containsRefs":false,"markdown":"\n\n\n- Reúne los datos necesarios en un archivo de datos (por ejemplo, CSV).\n- Asegúrate de que los datos estén limpios y formateados correctamente para su análisis y visualización.\n\nAbre RStudio y crea un nueva pestaña en Quarto. Utiliza funciones como read.csv() o read_excel() para importar tus datos al entorno de RStudio. Para este ejemplo, nos apoyaremos del paquete \"datapaste\" y la función \"tribble\".\n\n```{r}\n# llamar a la librería \nlibrary(tidyverse)\n\n# copiar la data y pegar utilizando addins seguido de paste as tribble\ndato <- tibble::tribble(\n              ~\"trat\", ~\"rep\", ~\"comp\",\n              \"Mg2\",   1L,     9,\n              \"Mg2\",   2L,  12.5,\n              \"Mg2\",   3L,    10,\n              \"Mg2\",   4L,     8,\n              \"Mg2\",   5L,  13.2,\n              \"Mg2\",   6L,    11,\n              \"Mg2\",   7L,  10.8,\n              \"Mg2\",   8L,   9.5,\n              \"Mg2\",   9L,  10.8,\n              \"Mg2\",  10L,  10.4,\n          \"control\",   1L, 13.72,\n          \"control\",   2L, 15.91,\n          \"control\",   3L,  15.7,\n          \"control\",   4L,  14.2,\n          \"control\",   5L,  15.9,\n          \"control\",   6L, 16.54,\n          \"control\",   7L,    18,\n          \"control\",   8L,  14.4,\n          \"control\",   9L, 16.41,\n          \"control\",  10L,    16\n          )\n```\n\n# Exploración de los datos\n\nAntes de crear la figura, explora tus datos para comprender su estructura y distribución. Utiliza funciones como head(), summary(), y str() para obtener una visión general de tus datos.\n\n```{r}\nhead(dato)\nnames(dato)\nstr(dato)\nsummary(dato)\n```\n\n# Crear la figura\n\nPara crear un boxplot se utiliza el paquete ggplot2.\n\n```{r}\nlibrary(ggplot2)\ndato |> \n  ggplot(aes(trat, comp)) +\n  geom_boxplot()\n```\n\nLos argumentos que se utilizó fueron:\n\n* |>: Esto toma el objeto dato y lo pasa como el primer argumento a la siguiente expresión.\n\n* ggplot(): Aquí se está creando un objeto de gráfico, lo que establece el mapeo estético utilizando aes(), donde trat se mapea al eje x (variable independiente) y comprimento que mapea al eje y (variable de dependiente).\n\n* geom_boxplot(): Esta función agrega una capa de diagrama de caja al gráfico, donde se muestra la distribución de una variable numérica (continua) a través   de sus cuartiles.\n\n\n# Personalización de la figura\n\nAñade etiquetas a los ejes x e y para hacer la figura más comprensible.\nModifica el color, tamaño y estilo de las líneas, puntos o barras según sea necesario. Agrega títulos y leyendas para proporcionar contexto a la figura. \n\nEn tal sentido, utilizaremos los siguientes argumentos:\n\n* fill: Parámetro que define el color de relleno de las cajas y bordes.\n\n* colour: Parámetro que define el color de los bordes de las cajas.\n  \n* alpha: Parámetro que define la transparencia de las cajas (0 es completamente   transparente y 100 es opaco).\n\n* outlier.colour: Parámetro que define el color de los puntos que se consideran   valores atípicos (por defecto, se dibujan puntos para los valores atípicos).\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp)) +\n    geom_boxplot(fill = \"dodgerblue1\", \n               colour = \"black\",\n               width = 0.8, # ancho de la caja\n               coef = 10, # tamaño de los bigotes\n               alpha = 1, # transparencia\n               outlier.colour = \"tomato2\", #NA\n               size = 2) + # bordes\n    stat_boxplot(geom ='errorbar', width = 0.25) # barrar a bigotes              \n```\n\nRecordar que la figura es una construcción de capas, entonces voy a reordenar las funciones para mejorar la visualización. \n\n```{r}\ndato |> \n  ggplot(aes(trat, comp)) +\n  stat_boxplot(geom ='errorbar',\n               width = 0.2) + \n  geom_boxplot(fill = \"dodgerblue1\", \n               colour = \"black\",\n               width = 0.8, \n               alpha = 1, \n               outlier.colour = \"tomato2\", #NA\n               size = 2) \n```\n\n## Adicioanr y personalizar los casos \n\n```{r}\nlibrary(ggplot2)\ndato |> \n  ggplot(aes(trat, comp)) +\n  stat_boxplot(geom ='errorbar',\n               width = 0.2) +\n  geom_boxplot(fill = \"dodgerblue1\", \n               colour = \"black\", \n               alpha = 1, \n               outlier.colour = NA) +\n  geom_jitter(color = \"black\",\n              size = 3,\n              #shape = 2, \n              with = 0.05) # with, width\n```\n\n## Cambio de colores a los box y forma de outlier\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(show.legend = FALSE,\n               outlier.shape = NA, \n               alpha = 0.3) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              shape = 21,\n              width = 0.25) # with, width\n```\n\n## Utilizo colourspicker\n\nPrimeramente instalo colourpicker, luego selecciono el argumento de fill y colour para configurar en la pestaña Addins.\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp)) +\n  geom_boxplot(fill = \"#B010682B\", \n               colour = \"#420C23\",\n               show.legend = FALSE,\n               outlier.shape = NA, \n               alpha = 0.5) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              #shape = 21,\n              width = 0.25) # with, width\n```\n\n## Selecciono colores para mi figura\n\nPrimero creo mis colores\n\n```{r}\nc(\"#BBFFFF\",\"#FF00FF\")\n```\n\nUno los códigos llamando a la función scale_fill_manual()\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(outlier.shape = NA, \n               alpha = 0.5) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              width = 0.25) + \n  scale_fill_manual(values = c(control =\"#BBFFFF\",\n                               Mg2 = \"#FF00FF\"))\n```\n\nTambién se puede configurar los colores a através de la función anteriormente llamada. Por ejemplo:\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(outlier.shape = NA, \n               alpha = 0.5) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              width = 0.25) + \n  scale_fill_hue() \n```\n\nUsando el paquete RColorBrewe y la función scale_fill_brewer().\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(outlier.shape = NA, \n               alpha = 0.8) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              width = 0.25) + \n  scale_fill_brewer(palette = 18) # 1-18\n```\n\nUsando la función scale_fill_brewer() y escala de colores: (https://jmsallan.netlify.app/blog/the-brewer-palettes/)\n(https://colorbrewer2.org/#type=sequential&scheme=Oranges&n=3)\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(outlier.shape = NA, \n               alpha = 0.8) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              width = 0.25) + \n  scale_fill_brewer(palette = \"Oranges\") #fill, color\n```\n\n# Personalizar la vista y ejes\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(outlier.shape = NA, \n               alpha = 0.8) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              width = 0.25) + \n  scale_fill_brewer(palette = \"Oranges\") +\n  theme_classic() +\n  labs(tittle = \"Investigación\", \n       x = \"Tratamientos\",\n       y = \"Diámetro (mm)\") +\n  expand_limits(x = 0, y = 0) +\n  scale_y_continuous(limits = c(0,20),\n                     breaks = c(0,5,10,15,20)) +\n  theme(axis.title = element_text(size = 20, \n                                  color = \"red\",\n                                  face = \"italic\"),\n        axis.text.x = element_text(size = 20, \n                                   color = \"blue\", \n                                   hjust = 0.5, \n                                   vjust = 1,\n                                   face = \"bold\")) + #“plain”, “italic”, “bold” and “bold.italic”\n  theme(axis.text.y = element_text(size = 20, \n                                   color = \"green\", \n                                   hjust = 1, \n                                   vjust = 0.4,\n                                   face = \"italic\")) +\n  theme(legend.position = \"none\") \n```\n\n# Modelo de Boxplot\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  stat_boxplot(geom = \"errorbar\", \n               width = 0.15) +\n  geom_boxplot(outlier.shape = NA,\n               color = \"black\",\n               size = 0.5) + \n  geom_jitter(color = \"black\",\n               size = 2) +\n  theme_classic() +\n  labs(x = \"Factores\",\n       y = \"Altura de planta (cm)\") +\n  scale_fill_brewer(palette = \"7\") +\n  expand_limits(y = 0) +\n  scale_y_continuous(limits = c(0,23),\n                     breaks = c(0,5,10,15,20,25,30)) +\n  theme(axis.title = element_text(size = 20, color = \"red\")) +\n  theme(axis.text.x = element_text(size = 15, color = \"blue\")) +\n  theme(axis.text.y = element_text(size = 15, color = \"green\")) +\n  theme(legend.position = c(0.2, 0.9),\n        legend.background = element_rect(color = \"black\"),\n        legend.text = element_text(size = 15), \n        legend.title = element_text(size = 15)) + \n  scale_fill_discrete(name = \"Tratamientos\")\n```\n\n","srcMarkdownNoYaml":"\n\n# Importar datos\n\n- Reúne los datos necesarios en un archivo de datos (por ejemplo, CSV).\n- Asegúrate de que los datos estén limpios y formateados correctamente para su análisis y visualización.\n\nAbre RStudio y crea un nueva pestaña en Quarto. Utiliza funciones como read.csv() o read_excel() para importar tus datos al entorno de RStudio. Para este ejemplo, nos apoyaremos del paquete \"datapaste\" y la función \"tribble\".\n\n```{r}\n# llamar a la librería \nlibrary(tidyverse)\n\n# copiar la data y pegar utilizando addins seguido de paste as tribble\ndato <- tibble::tribble(\n              ~\"trat\", ~\"rep\", ~\"comp\",\n              \"Mg2\",   1L,     9,\n              \"Mg2\",   2L,  12.5,\n              \"Mg2\",   3L,    10,\n              \"Mg2\",   4L,     8,\n              \"Mg2\",   5L,  13.2,\n              \"Mg2\",   6L,    11,\n              \"Mg2\",   7L,  10.8,\n              \"Mg2\",   8L,   9.5,\n              \"Mg2\",   9L,  10.8,\n              \"Mg2\",  10L,  10.4,\n          \"control\",   1L, 13.72,\n          \"control\",   2L, 15.91,\n          \"control\",   3L,  15.7,\n          \"control\",   4L,  14.2,\n          \"control\",   5L,  15.9,\n          \"control\",   6L, 16.54,\n          \"control\",   7L,    18,\n          \"control\",   8L,  14.4,\n          \"control\",   9L, 16.41,\n          \"control\",  10L,    16\n          )\n```\n\n# Exploración de los datos\n\nAntes de crear la figura, explora tus datos para comprender su estructura y distribución. Utiliza funciones como head(), summary(), y str() para obtener una visión general de tus datos.\n\n```{r}\nhead(dato)\nnames(dato)\nstr(dato)\nsummary(dato)\n```\n\n# Crear la figura\n\nPara crear un boxplot se utiliza el paquete ggplot2.\n\n```{r}\nlibrary(ggplot2)\ndato |> \n  ggplot(aes(trat, comp)) +\n  geom_boxplot()\n```\n\nLos argumentos que se utilizó fueron:\n\n* |>: Esto toma el objeto dato y lo pasa como el primer argumento a la siguiente expresión.\n\n* ggplot(): Aquí se está creando un objeto de gráfico, lo que establece el mapeo estético utilizando aes(), donde trat se mapea al eje x (variable independiente) y comprimento que mapea al eje y (variable de dependiente).\n\n* geom_boxplot(): Esta función agrega una capa de diagrama de caja al gráfico, donde se muestra la distribución de una variable numérica (continua) a través   de sus cuartiles.\n\n\n# Personalización de la figura\n\nAñade etiquetas a los ejes x e y para hacer la figura más comprensible.\nModifica el color, tamaño y estilo de las líneas, puntos o barras según sea necesario. Agrega títulos y leyendas para proporcionar contexto a la figura. \n\nEn tal sentido, utilizaremos los siguientes argumentos:\n\n* fill: Parámetro que define el color de relleno de las cajas y bordes.\n\n* colour: Parámetro que define el color de los bordes de las cajas.\n  \n* alpha: Parámetro que define la transparencia de las cajas (0 es completamente   transparente y 100 es opaco).\n\n* outlier.colour: Parámetro que define el color de los puntos que se consideran   valores atípicos (por defecto, se dibujan puntos para los valores atípicos).\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp)) +\n    geom_boxplot(fill = \"dodgerblue1\", \n               colour = \"black\",\n               width = 0.8, # ancho de la caja\n               coef = 10, # tamaño de los bigotes\n               alpha = 1, # transparencia\n               outlier.colour = \"tomato2\", #NA\n               size = 2) + # bordes\n    stat_boxplot(geom ='errorbar', width = 0.25) # barrar a bigotes              \n```\n\nRecordar que la figura es una construcción de capas, entonces voy a reordenar las funciones para mejorar la visualización. \n\n```{r}\ndato |> \n  ggplot(aes(trat, comp)) +\n  stat_boxplot(geom ='errorbar',\n               width = 0.2) + \n  geom_boxplot(fill = \"dodgerblue1\", \n               colour = \"black\",\n               width = 0.8, \n               alpha = 1, \n               outlier.colour = \"tomato2\", #NA\n               size = 2) \n```\n\n## Adicioanr y personalizar los casos \n\n```{r}\nlibrary(ggplot2)\ndato |> \n  ggplot(aes(trat, comp)) +\n  stat_boxplot(geom ='errorbar',\n               width = 0.2) +\n  geom_boxplot(fill = \"dodgerblue1\", \n               colour = \"black\", \n               alpha = 1, \n               outlier.colour = NA) +\n  geom_jitter(color = \"black\",\n              size = 3,\n              #shape = 2, \n              with = 0.05) # with, width\n```\n\n## Cambio de colores a los box y forma de outlier\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(show.legend = FALSE,\n               outlier.shape = NA, \n               alpha = 0.3) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              shape = 21,\n              width = 0.25) # with, width\n```\n\n## Utilizo colourspicker\n\nPrimeramente instalo colourpicker, luego selecciono el argumento de fill y colour para configurar en la pestaña Addins.\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp)) +\n  geom_boxplot(fill = \"#B010682B\", \n               colour = \"#420C23\",\n               show.legend = FALSE,\n               outlier.shape = NA, \n               alpha = 0.5) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              #shape = 21,\n              width = 0.25) # with, width\n```\n\n## Selecciono colores para mi figura\n\nPrimero creo mis colores\n\n```{r}\nc(\"#BBFFFF\",\"#FF00FF\")\n```\n\nUno los códigos llamando a la función scale_fill_manual()\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(outlier.shape = NA, \n               alpha = 0.5) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              width = 0.25) + \n  scale_fill_manual(values = c(control =\"#BBFFFF\",\n                               Mg2 = \"#FF00FF\"))\n```\n\nTambién se puede configurar los colores a através de la función anteriormente llamada. Por ejemplo:\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(outlier.shape = NA, \n               alpha = 0.5) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              width = 0.25) + \n  scale_fill_hue() \n```\n\nUsando el paquete RColorBrewe y la función scale_fill_brewer().\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(outlier.shape = NA, \n               alpha = 0.8) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              width = 0.25) + \n  scale_fill_brewer(palette = 18) # 1-18\n```\n\nUsando la función scale_fill_brewer() y escala de colores: (https://jmsallan.netlify.app/blog/the-brewer-palettes/)\n(https://colorbrewer2.org/#type=sequential&scheme=Oranges&n=3)\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(outlier.shape = NA, \n               alpha = 0.8) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              width = 0.25) + \n  scale_fill_brewer(palette = \"Oranges\") #fill, color\n```\n\n# Personalizar la vista y ejes\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  geom_boxplot(outlier.shape = NA, \n               alpha = 0.8) +   \n  geom_jitter(show.legend = FALSE,\n              color = \"black\",\n              size = 3,\n              width = 0.25) + \n  scale_fill_brewer(palette = \"Oranges\") +\n  theme_classic() +\n  labs(tittle = \"Investigación\", \n       x = \"Tratamientos\",\n       y = \"Diámetro (mm)\") +\n  expand_limits(x = 0, y = 0) +\n  scale_y_continuous(limits = c(0,20),\n                     breaks = c(0,5,10,15,20)) +\n  theme(axis.title = element_text(size = 20, \n                                  color = \"red\",\n                                  face = \"italic\"),\n        axis.text.x = element_text(size = 20, \n                                   color = \"blue\", \n                                   hjust = 0.5, \n                                   vjust = 1,\n                                   face = \"bold\")) + #“plain”, “italic”, “bold” and “bold.italic”\n  theme(axis.text.y = element_text(size = 20, \n                                   color = \"green\", \n                                   hjust = 1, \n                                   vjust = 0.4,\n                                   face = \"italic\")) +\n  theme(legend.position = \"none\") \n```\n\n# Modelo de Boxplot\n\n```{r}\ndato |> \n  ggplot(aes(trat, comp, fill = trat)) +\n  stat_boxplot(geom = \"errorbar\", \n               width = 0.15) +\n  geom_boxplot(outlier.shape = NA,\n               color = \"black\",\n               size = 0.5) + \n  geom_jitter(color = \"black\",\n               size = 2) +\n  theme_classic() +\n  labs(x = \"Factores\",\n       y = \"Altura de planta (cm)\") +\n  scale_fill_brewer(palette = \"7\") +\n  expand_limits(y = 0) +\n  scale_y_continuous(limits = c(0,23),\n                     breaks = c(0,5,10,15,20,25,30)) +\n  theme(axis.title = element_text(size = 20, color = \"red\")) +\n  theme(axis.text.x = element_text(size = 15, color = \"blue\")) +\n  theme(axis.text.y = element_text(size = 15, color = \"green\")) +\n  theme(legend.position = c(0.2, 0.9),\n        legend.background = element_rect(color = \"black\"),\n        legend.text = element_text(size = 15), \n        legend.title = element_text(size = 15)) + \n  scale_fill_discrete(name = \"Tratamientos\")\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"number-sections":true,"output-file":"10.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.551","editor":"visual","fontsize":"1.1em","theme":{"light":"flatly","dark":"darkly"},"title":"Boxplot","author":"Richard Pardes-Espinosa","data":"2024-07-01","editor_options":{"chunk_output_type":"console"},"code-summary":"ver código"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}