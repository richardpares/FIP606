{"title":"Tópico 2","markdown":{"yaml":{"title":"Tópico 2","author":"Richard Pardes-Espinosa","data":"2024-03-20","format":"html","editor":"visual","editor_options":{"chunk_output_type":"console"},"toc":true,"number-sections":true,"code-fold":"show","code-summary":"ver código"},"headingText":"Importar datos","containsRefs":false,"markdown":"\n\n\n\nUsando la función **tibble::tribble** se importa los datos de manera rápida. La base contiene a los tratamientos \n\n```{r}\n# Cargar librerías \nlibrary(tibble)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(multcompView)\nlibrary(performance)\nlibrary(DHARMa)\nlibrary(car)\n  \n# Llamar datos\nbac <- tibble::tribble(\n                    ~trat, ~inib,\n            \"sulfonamida\",   1.8,\n            \"sulfonamida\",     2,\n            \"sulfonamida\",   1.9,\n         \"estreptomicina\",   1.9,\n         \"estreptomicina\",   2.1,\n         \"estreptomicina\",     2,\n         \"ciprofloxacina\",     1,\n         \"ciprofloxacina\",     1,\n         \"ciprofloxacina\",     1,\n            \"rifampicina\",   2.6,\n            \"rifampicina\",   2.8,\n            \"rifampicina\",   2.7\n         )\nbac\n```\n\n## Transformación de la variable dependiente\n\nEl código primero transforma la variable `inib` del dataset `bac` mediante la función `mutate` de dplyr, creando una nueva variable llamada `inib_log` que es el logaritmo natural de `inib` incrementado en 1 para evitar problemas con valores cero. Luego, ajusta un modelo ANOVA utilizando `lm` para analizar la relación entre la variable transformada `inib_log` y el tratamiento `trat`. Finalmente, se muestra un resumen del modelo ajustado con `summary(m1_log)`, proporcionando detalles estadísticos del modelo, incluyendo coeficientes, errores estándar y significancia.\n\n```{r}\n# Transformar la variable inib\nbac <- bac |> \n  mutate(inib_log = log(inib + 1))\n\n# Ajustar el modelo ANOVA\nm1_log <- lm(inib_log ~ trat, \n              data = bac)\nsummary(m1_log)\n```\n\n## Supuestos de Normalidad y Homocedasticidad\n\nEste script en RStudio para Quarto verifica la normalidad y homocedasticidad de los residuos de un modelo lineal `m1_log`. Primero, la función `check_normality(m1_log)` evalúa si los residuos siguen una distribución normal, lo cual es crucial para la validez de muchos análisis estadísticos. Luego, `check_heteroscedasticity(m1_log)` revisa si la varianza de los residuos es constante a lo largo de los valores predichos, condición conocida como homocedasticidad. Finalmente, `plot(simulateResiduals(m1_log))` genera gráficos de los residuos simulados del modelo para visualizar estos aspectos y otros posibles problemas, proporcionando una evaluación gráfica completa del ajuste del modelo.\n\n```{r}\n# normalidad y homocedasticidad \ncheck_normality(m1_log)\ncheck_heteroscedasticity(m1_log)\n\n# Normalidad y homocedasticidad \nplot(simulateResiduals(m1_log))\n```\n\n## ANOVA\n\nEste script realiza un análisis de varianza (ANOVA) utilizando el modelo lineal general con `aov()` para evaluar la influencia del tratamiento (`trat`) en la variable de respuesta (`inib`), utilizando datos del objeto `bac`. El análisis identifica si existen diferencias significativas entre los tratamientos. Luego, se aplica el test de Tukey (`TukeyHSD()`) para realizar comparaciones múltiples entre los tratamientos y determinar cuáles son estadísticamente diferentes entre sí, imprimiendo los resultados con `tukey`. Finalmente, se utiliza `multcompLetters4()` para generar letras de comparación que indican grupos estadísticamente similares, basadas en los resultados de Tukey, y se imprimen con `cld`. Este proceso ayuda a identificar y categorizar diferencias significativas entre tratamientos en el estudio.\n\n```{r}\n# Anova para correr con TukeyHSD\nANOVA <- aov(inib_log ~ trat, \n              data = bac)\n\n# Test de Tukey\ntukey <- TukeyHSD(ANOVA)\ntukey\n\n# Comparación con multcompView\ncld <- multcompLetters4(ANOVA, tukey)\ncld\n```\n\n## Test de Tukey\n\nSe agrupa el conjunto de datos por el factor `trat` y se calcula la media y el tercer cuartil (Q3) de la variable `inib` utilizando las funciones `group_by`, `summarise` y `quantile`. Luego, se ordena el resultado en orden descendente según la media calculada. Posteriormente, se asignan letras de comparación a los tratamientos en base a un objeto `cld` que contiene estas letras, creando así una nueva columna `cld` en el dataframe `Tk`, que ahora contiene la media, Q3 y las letras de comparación para cada tratamiento.\n\n```{r}\n# Crear tabla con factor y 3er cuartil (Q3)\nTk <- bac |> \n  group_by(trat) |> \n  summarise(mean = mean(inib), \n            quant = quantile(inib, \n                             probs = 0.75)) |> \n  arrange(desc(mean))\n\n# Asignar letras de comparación a Tk_log basado en cld_log\ncld_df <- as.data.frame.list(cld$trat)\nTk$cld <- cld_df$Letters\nTk\n```\n\n## Visualización de resultados\n\nCon la función `mean_cl_boot` se calcula la media y los intervalos de confianza al 99% para un vector `x`. Dentro de la función, `mean(x, na.rm = TRUE)` calcula la media, `sd(x, na.rm = TRUE) / sqrt(length(x))` calcula el error estándar de la media, y luego se calculan `ymin` y `ymax` como límites inferior y superior del intervalo de confianza al 99% respectivamente. El gráfico generado con ggplot utiliza los datos del dataframe `bac`, mapeando `trat` en el eje x y `inib` en el eje y, coloreando por tratamiento (`color = trat`). `stat_summary` utiliza la función `mean_cl_boot` para calcular y representar las medias y los intervalos de confianza como puntos y rangos (`geom = \"pointrange\"`). Además, `geom_text` agrega etiquetas de comparación de letras (`cld`) con ubicaciones específicas (`quant`) para cada tratamiento (`trat`). Se personalizan los colores con `scale_color_brewer`, se aplica un tema minimalista con `theme_minimal`, se etiquetan los ejes y se ajusta el formato del texto y títulos de los ejes con `labs` y `theme`.\n\n```{r}\n# Función para calcular media e intervalos de confianza al 99%\nmean_cl_boot <- function(x) {\n  m <- mean(x, na.rm = TRUE)\n  se <- sd(x, na.rm = TRUE) / sqrt(length(x))\n  ymin <- m - 2.576 * se  # Intervalo de confianza al 99%\n  ymax <- m + 2.576 * se  # Intervalo de confianza al 99%\n  return(c(y = m, ymin = ymin, ymax = ymax))\n}\n\n# Crear el gráfico con intervalos de confianza más largos\nggplot(bac, aes(x = trat, \n                y = inib, \n                color = trat)) +\n  stat_summary(fun.data = mean_cl_boot, \n               geom = \"pointrange\", \n               size = 0.8) +\n  geom_text(data = Tk, \n            aes(label = cld, \n                y = quant, \n                group = trat), \n            vjust = -0.5, size = 5, \n            fontface = \"bold\", \n            color = \"black\") +\n  scale_color_brewer(palette = \"Paired\") +\n  theme_minimal() +\n  labs(x = \"Tratamientos\", \n       y = \"Crecimiento (Inhibición)\") + \n  theme(axis.text.x = element_text(size = 12, \n                                   color = \"black\", \n                                   angle = 45, \n                                   hjust = 1),\n        axis.text.y = element_text(size = 12, \n                                   color = \"black\"),\n        axis.title = element_text(size = 14, \n                                  color = \"black\"),\n        legend.position = \"none\")\n```\n\n\n\n\n\n\n\n","srcMarkdownNoYaml":"\n\n\n## Importar datos\n\nUsando la función **tibble::tribble** se importa los datos de manera rápida. La base contiene a los tratamientos \n\n```{r}\n# Cargar librerías \nlibrary(tibble)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(multcompView)\nlibrary(performance)\nlibrary(DHARMa)\nlibrary(car)\n  \n# Llamar datos\nbac <- tibble::tribble(\n                    ~trat, ~inib,\n            \"sulfonamida\",   1.8,\n            \"sulfonamida\",     2,\n            \"sulfonamida\",   1.9,\n         \"estreptomicina\",   1.9,\n         \"estreptomicina\",   2.1,\n         \"estreptomicina\",     2,\n         \"ciprofloxacina\",     1,\n         \"ciprofloxacina\",     1,\n         \"ciprofloxacina\",     1,\n            \"rifampicina\",   2.6,\n            \"rifampicina\",   2.8,\n            \"rifampicina\",   2.7\n         )\nbac\n```\n\n## Transformación de la variable dependiente\n\nEl código primero transforma la variable `inib` del dataset `bac` mediante la función `mutate` de dplyr, creando una nueva variable llamada `inib_log` que es el logaritmo natural de `inib` incrementado en 1 para evitar problemas con valores cero. Luego, ajusta un modelo ANOVA utilizando `lm` para analizar la relación entre la variable transformada `inib_log` y el tratamiento `trat`. Finalmente, se muestra un resumen del modelo ajustado con `summary(m1_log)`, proporcionando detalles estadísticos del modelo, incluyendo coeficientes, errores estándar y significancia.\n\n```{r}\n# Transformar la variable inib\nbac <- bac |> \n  mutate(inib_log = log(inib + 1))\n\n# Ajustar el modelo ANOVA\nm1_log <- lm(inib_log ~ trat, \n              data = bac)\nsummary(m1_log)\n```\n\n## Supuestos de Normalidad y Homocedasticidad\n\nEste script en RStudio para Quarto verifica la normalidad y homocedasticidad de los residuos de un modelo lineal `m1_log`. Primero, la función `check_normality(m1_log)` evalúa si los residuos siguen una distribución normal, lo cual es crucial para la validez de muchos análisis estadísticos. Luego, `check_heteroscedasticity(m1_log)` revisa si la varianza de los residuos es constante a lo largo de los valores predichos, condición conocida como homocedasticidad. Finalmente, `plot(simulateResiduals(m1_log))` genera gráficos de los residuos simulados del modelo para visualizar estos aspectos y otros posibles problemas, proporcionando una evaluación gráfica completa del ajuste del modelo.\n\n```{r}\n# normalidad y homocedasticidad \ncheck_normality(m1_log)\ncheck_heteroscedasticity(m1_log)\n\n# Normalidad y homocedasticidad \nplot(simulateResiduals(m1_log))\n```\n\n## ANOVA\n\nEste script realiza un análisis de varianza (ANOVA) utilizando el modelo lineal general con `aov()` para evaluar la influencia del tratamiento (`trat`) en la variable de respuesta (`inib`), utilizando datos del objeto `bac`. El análisis identifica si existen diferencias significativas entre los tratamientos. Luego, se aplica el test de Tukey (`TukeyHSD()`) para realizar comparaciones múltiples entre los tratamientos y determinar cuáles son estadísticamente diferentes entre sí, imprimiendo los resultados con `tukey`. Finalmente, se utiliza `multcompLetters4()` para generar letras de comparación que indican grupos estadísticamente similares, basadas en los resultados de Tukey, y se imprimen con `cld`. Este proceso ayuda a identificar y categorizar diferencias significativas entre tratamientos en el estudio.\n\n```{r}\n# Anova para correr con TukeyHSD\nANOVA <- aov(inib_log ~ trat, \n              data = bac)\n\n# Test de Tukey\ntukey <- TukeyHSD(ANOVA)\ntukey\n\n# Comparación con multcompView\ncld <- multcompLetters4(ANOVA, tukey)\ncld\n```\n\n## Test de Tukey\n\nSe agrupa el conjunto de datos por el factor `trat` y se calcula la media y el tercer cuartil (Q3) de la variable `inib` utilizando las funciones `group_by`, `summarise` y `quantile`. Luego, se ordena el resultado en orden descendente según la media calculada. Posteriormente, se asignan letras de comparación a los tratamientos en base a un objeto `cld` que contiene estas letras, creando así una nueva columna `cld` en el dataframe `Tk`, que ahora contiene la media, Q3 y las letras de comparación para cada tratamiento.\n\n```{r}\n# Crear tabla con factor y 3er cuartil (Q3)\nTk <- bac |> \n  group_by(trat) |> \n  summarise(mean = mean(inib), \n            quant = quantile(inib, \n                             probs = 0.75)) |> \n  arrange(desc(mean))\n\n# Asignar letras de comparación a Tk_log basado en cld_log\ncld_df <- as.data.frame.list(cld$trat)\nTk$cld <- cld_df$Letters\nTk\n```\n\n## Visualización de resultados\n\nCon la función `mean_cl_boot` se calcula la media y los intervalos de confianza al 99% para un vector `x`. Dentro de la función, `mean(x, na.rm = TRUE)` calcula la media, `sd(x, na.rm = TRUE) / sqrt(length(x))` calcula el error estándar de la media, y luego se calculan `ymin` y `ymax` como límites inferior y superior del intervalo de confianza al 99% respectivamente. El gráfico generado con ggplot utiliza los datos del dataframe `bac`, mapeando `trat` en el eje x y `inib` en el eje y, coloreando por tratamiento (`color = trat`). `stat_summary` utiliza la función `mean_cl_boot` para calcular y representar las medias y los intervalos de confianza como puntos y rangos (`geom = \"pointrange\"`). Además, `geom_text` agrega etiquetas de comparación de letras (`cld`) con ubicaciones específicas (`quant`) para cada tratamiento (`trat`). Se personalizan los colores con `scale_color_brewer`, se aplica un tema minimalista con `theme_minimal`, se etiquetan los ejes y se ajusta el formato del texto y títulos de los ejes con `labs` y `theme`.\n\n```{r}\n# Función para calcular media e intervalos de confianza al 99%\nmean_cl_boot <- function(x) {\n  m <- mean(x, na.rm = TRUE)\n  se <- sd(x, na.rm = TRUE) / sqrt(length(x))\n  ymin <- m - 2.576 * se  # Intervalo de confianza al 99%\n  ymax <- m + 2.576 * se  # Intervalo de confianza al 99%\n  return(c(y = m, ymin = ymin, ymax = ymax))\n}\n\n# Crear el gráfico con intervalos de confianza más largos\nggplot(bac, aes(x = trat, \n                y = inib, \n                color = trat)) +\n  stat_summary(fun.data = mean_cl_boot, \n               geom = \"pointrange\", \n               size = 0.8) +\n  geom_text(data = Tk, \n            aes(label = cld, \n                y = quant, \n                group = trat), \n            vjust = -0.5, size = 5, \n            fontface = \"bold\", \n            color = \"black\") +\n  scale_color_brewer(palette = \"Paired\") +\n  theme_minimal() +\n  labs(x = \"Tratamientos\", \n       y = \"Crecimiento (Inhibición)\") + \n  theme(axis.text.x = element_text(size = 12, \n                                   color = \"black\", \n                                   angle = 45, \n                                   hjust = 1),\n        axis.text.y = element_text(size = 12, \n                                   color = \"black\"),\n        axis.title = element_text(size = 14, \n                                  color = \"black\"),\n        legend.position = \"none\")\n```\n\n\n\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"number-sections":true,"output-file":"21.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.551","editor":"visual","fontsize":"1.1em","theme":{"light":"flatly","dark":"darkly"},"title":"Tópico 2","author":"Richard Pardes-Espinosa","data":"2024-03-20","editor_options":{"chunk_output_type":"console"},"code-summary":"ver código"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}